# -*- coding: utf-8 -*-
"""Visualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jlHa5ebxCHVnulpUxXBY9vLFpcmwSeJn
"""

import pandas as pd

data = pd.read_csv("drive/MyDrive/Trenton MOVES/Trenton/incomedataset.csv")
data = data.drop(columns = "Unnamed: 0")
data['Person ID'] = data['Person ID'].astype(int)
data

Poverty = []
Normal=[]
for i, row in enumerate (data.iloc[:,33]):
  if row == True:
    Poverty.append(data.iloc[i])
  if row == False:
    Normal.append(data.iloc[i])
Poverty = pd.DataFrame(Poverty)
Normal = pd.DataFrame(Normal)

#HH Income vs Trip Distance
x = data.iloc[:,32]
y= data.iloc[:,18]
import plotly.express as px
fig = px.scatter(x=x, y=y)
fig.update_layout(
    title="Household Income vs GCDistance",
    xaxis_title="HH Income",
    yaxis_title="GCDistance",)
fig.show()

#Income vs Trip Distance
x = data.iloc[:,32]
y= data.iloc[:,18]
import plotly.express as px
fig = px.scatter(x=x, y=y)
fig.update_layout(
    title="Age vs GCDistance",
    xaxis_title="Age",
    yaxis_title="GCDistance",)
fig.show()

distance = data.iloc[:,18]
distance = pd.DataFrame(distance)
distances = []
for i, row in enumerate (distance.iloc[:,0]):
  if row < 100:
    distances.append(row)
distances = pd.DataFrame(distances)
fig = px.ecdf(distances, x=[0])
fig.update_layout(
    title="GCDistance in Trenton",
    xaxis_title="Distance",
    yaxis_title="Probability",)
fig.show()

distances

income = data.iloc[:,30]
income = pd.DataFrame(income)
fig = px.ecdf(income, x="Income Amount")
fig.show()

x = pd.DataFrame(x)
u = x

#Age of Non-Poverty people
fig = px.ecdf(Normal, x="Age")
fig.show()

#Age of Poverty people
fig = px.ecdf(Poverty, x="Age")
fig.update_layout(
    title="Ages of People in Poverty",)
fig.show()

Poverty

a = Poverty.iloc[:,26]
a = pd.DataFrame(a)
a
b = Normal.iloc[:,26]
b = pd.DataFrame(b)
a

a.rename(columns={'Age': 'Poverty Age'},
          inplace=True, errors='raise')

a

#Poverty Age
c = pd.concat([b,a], axis=1)
fig = px.ecdf(c, x=["Age", "Poverty Age"])
fig.show()

#Poverty share
fig = px.histogram(data, x="Poverty")
fig.show()